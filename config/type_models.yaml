statement_types:
  - type_name: "AMEX Statement - Card"
    summary_fields:
      - field_name: "PreviousBalance"
        is_amount: true
      - field_name: "PaymentsAndCredits"
        is_amount: true
      - field_name: "NewDebits"
        is_amount: true
      - field_name: "TotalBalance"
        is_amount: true
      - field_name: "BalanceDue"
        is_amount: true
      - field_name: "PaymentDueDate"
        is_date: true
      - field_name: "DocumentName"
    transaction_static_fields:
      - field_name: "AccountName"
      - field_name: "AccountEntity"
      - field_name: "ABN"
      - field_name: "CorporateID"
      - field_name: "MembershipNumber"
      - field_name: "StatementDate"
    transaction_dynamic_fields:
      - field_name: "Date"
      - field_name: "Description"
      - field_name: "Amount"
        is_amount: true
      - field_name: "CR if Credit"


  - type_name: "Westpac Statement - Bank"
    summary_fields:
      - field_name: "OpeningBalance"
        is_amount: true
      - field_name: "TotalCredits"
        is_amount: true
      - field_name: "TotalDebits"
        is_amount: true
      - field_name: "ClosingBalance"
        is_amount: true
    transaction_static_fields:
      - field_name: "StatementNumber"
      - field_name: "StatementStartDate"
        is_date: true
      - field_name: "StatementEndDate"
        is_date: true
      - field_name: "AccountName"
      - field_name: "CustomerID"
      - field_name: "BSB"
      - field_name: "AccountNumber"
      - field_name: "Address"
    transaction_dynamic_fields:
      - field_name: "Date"
        is_date: true
      - field_name: "Description"
      - field_name: "Debit"
        is_amount: true
      - field_name: "Credit"
        is_amount: true
      - field_name: "Balance"
        is_amount: true

# The is_amount field was original used to specify what values needed to be transformed into amounts during processing, but this is now handled by the field type in the model itself. It has been retained here (and is_date) added for backwards compatibility and to ensure future flexibility.